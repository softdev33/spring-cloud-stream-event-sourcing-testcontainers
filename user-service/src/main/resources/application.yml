server:
  port: 9080

spring:
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/userdb?characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: secret
  cloud:
    schema-registry-client:
      endpoint: http://${SCHEMA_REGISTRY_HOST:localhost}:${SCHEMA_REGISTRY_PORT:8081}
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:29092}
          auto-add-partitions: true # (*) both user-service and event-service can create topic and add partitions
      source: users
      bindings:
        users-out-0:
          destination: com.mycompany.userservice.user
          content-type: application/json
          producer:
            partition-key-expression: headers['partitionKey']
            partition-count: 3 # (*)
  sleuth:
    sampler:
      probability: 1.0

management:
  endpoints:
    web:
      exposure.include: beans, env, health, info, metrics, mappings
  endpoint:
    health:
      show-details: always
  health:
    probes:
      enabled: true

springdoc:
  show-actuator: true
  swagger-ui:
    groups-order: DESC
    disable-swagger-default-url: true

---
spring:
  config:
    activate:
      on-profile: avro
  cloud:
    schema:
      avro:
        schema-locations:
          - classpath:avro/userevent-message.avsc
    stream:
      bindings:
        users-out-0:
          content-type: application/*+avro

---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    hibernate:
      ddl-auto: create-drop
