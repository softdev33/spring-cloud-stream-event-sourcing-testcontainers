plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'com.commercehub.gradle.plugin.avro' version '0.9.1'
    id 'com.google.cloud.tools.jib' version '2.5.1'
}

group = 'com.mycompany'
version = '1.0.0'
sourceCompatibility = 11

ext {
    set('springCloudVersion', 'Hoxton.SR8')
    set('avroVersion', '1.9.2')
    set('mapstructVersion', '1.3.1.Final')
    set('springdocOpenApiVerison', '1.4.8')
    set('cassandraUnitSpringVersion', '4.3.1.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation 'org.springframework.cloud:spring-cloud-schema-registry-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation "org.apache.avro:avro:${avroVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.springdoc:springdoc-openapi-ui:${springdocOpenApiVerison}"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation "org.cassandraunit:cassandra-unit-spring:${cassandraUnitSpringVersion}"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// configuring plugin for generating Java classes for Avro Schema 

avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    description = 'Generate Java classes from Avro schema located at src/main/resources/avro'
    source("src/main/resources/avro")
    outputDir = file("src/main/java/avro")
}

compileJava.source(generateAvro.outputs)

jib {
    from {
        image = 'openjdk:11.0.7'
    }
    to {
        image = "docker.mycompany.com/event-service:${project.version}"
    }
    container {
        ports = ['8080']
    }
}
